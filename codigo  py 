{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOfGWXk2XLjyaYT1/aJtC1Z",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/SebastianMelo77777/proyecto1/blob/main/codigo%20%20py%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "BSpBxN8BNdKv"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pres = pd.read_csv(\"/content/ejec_2324_clean_2.csv\")"
      ],
      "metadata": {
        "id": "FLqxdgEkOjle"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pres.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RCc2y2W-O1R0",
        "outputId": "f1b67734-397f-4e05-da52-7fec8714fb93"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 206691 entries, 0 to 206690\n",
            "Data columns (total 25 columns):\n",
            " #   Column               Non-Null Count   Dtype  \n",
            "---  ------               --------------   -----  \n",
            " 0   Código DANE          206691 non-null  int64  \n",
            " 1   Entidad              206691 non-null  object \n",
            " 2   Tipo de Entidad      206691 non-null  object \n",
            " 3   Total Recaudo        206691 non-null  int64  \n",
            " 4   col_1                206691 non-null  object \n",
            " 5   col_2                206691 non-null  object \n",
            " 6   col_3                206691 non-null  object \n",
            " 7   col_4                206691 non-null  object \n",
            " 8   col_5                206691 non-null  object \n",
            " 9   col_6                206691 non-null  object \n",
            " 10  col_7                206691 non-null  object \n",
            " 11  col_8                206691 non-null  object \n",
            " 12  col_9                206691 non-null  object \n",
            " 13  col_10               206691 non-null  object \n",
            " 14  Categoría            206479 non-null  float64\n",
            " 15  codigo_alt           206479 non-null  float64\n",
            " 16  Departamento         206691 non-null  object \n",
            " 17  Año                  206691 non-null  int64  \n",
            " 18  clasificacion_ofpuj  206691 non-null  object \n",
            " 19  CodigodDane          206479 non-null  float64\n",
            " 20  recaudo_pc           206504 non-null  float64\n",
            " 21  recaudo_cons         206691 non-null  float64\n",
            " 22  recaudo_pc_cons      206504 non-null  float64\n",
            " 23  clas_gen             206691 non-null  object \n",
            " 24  clas_gen_2           206691 non-null  object \n",
            "dtypes: float64(6), int64(3), object(16)\n",
            "memory usage: 39.4+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pres.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 551
        },
        "id": "8mFuisRlO-g9",
        "outputId": "2bf4d3dc-9e9d-486a-d894-5b061012d9f0"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Código DANE    Entidad Tipo de Entidad  Total Recaudo     col_1  \\\n",
              "0         5000  Antioquia    Departamento     4296815623  INGRESOS   \n",
              "1         5000  Antioquia    Departamento   107856005961  INGRESOS   \n",
              "2         5000  Antioquia    Departamento   382846271980  INGRESOS   \n",
              "3         5000  Antioquia    Departamento    42538474665  INGRESOS   \n",
              "4         5000  Antioquia    Departamento    10904213995  INGRESOS   \n",
              "\n",
              "                 col_2                 col_3               col_4  \\\n",
              "0  INGRESOS CORRIENTES  INGRESOS TRIBUTARIOS  IMPUESTOS DIRECTOS   \n",
              "1  INGRESOS CORRIENTES  INGRESOS TRIBUTARIOS  IMPUESTOS DIRECTOS   \n",
              "2  INGRESOS CORRIENTES  INGRESOS TRIBUTARIOS  IMPUESTOS DIRECTOS   \n",
              "3  INGRESOS CORRIENTES  INGRESOS TRIBUTARIOS  IMPUESTOS DIRECTOS   \n",
              "4  INGRESOS CORRIENTES  INGRESOS TRIBUTARIOS  IMPUESTOS DIRECTOS   \n",
              "\n",
              "                                               col_5  \\\n",
              "0               IMPUESTO SOBRE VEHICULOS AUTOMOTORES   \n",
              "1               IMPUESTO SOBRE VEHICULOS AUTOMOTORES   \n",
              "2               IMPUESTO SOBRE VEHICULOS AUTOMOTORES   \n",
              "3               IMPUESTO SOBRE VEHICULOS AUTOMOTORES   \n",
              "4  IMPUESTO A GANADORES DE SORTEOS ORDINARIOS Y E...   \n",
              "\n",
              "                                               col_6  ... codigo_alt  \\\n",
              "0               IMPUESTO SOBRE VEHICULOS AUTOMOTORES  ...     5000.0   \n",
              "1               IMPUESTO SOBRE VEHICULOS AUTOMOTORES  ...     5000.0   \n",
              "2               IMPUESTO SOBRE VEHICULOS AUTOMOTORES  ...     5000.0   \n",
              "3               IMPUESTO SOBRE VEHICULOS AUTOMOTORES  ...     5000.0   \n",
              "4  IMPUESTO A GANADORES DE SORTEOS ORDINARIOS Y E...  ...     5000.0   \n",
              "\n",
              "  Departamento   Año                   clasificacion_ofpuj  CodigodDane  \\\n",
              "0    Antioquia  2023  Impuesto sobre vehiculos automotores       5000.0   \n",
              "1    Antioquia  2023  Impuesto sobre vehiculos automotores       5000.0   \n",
              "2    Antioquia  2023  Impuesto sobre vehiculos automotores       5000.0   \n",
              "3    Antioquia  2023  Impuesto sobre vehiculos automotores       5000.0   \n",
              "4    Antioquia  2023            Otros ingresos tributarios       5000.0   \n",
              "\n",
              "     recaudo_pc  recaudo_cons  recaudo_pc_cons          clas_gen  \\\n",
              "0    614.287833  4.520205e+09       646.224378  Ingresos propios   \n",
              "1  15419.472939  1.134634e+11     16221.124306  Ingresos propios   \n",
              "2  54733.045955  4.027503e+11     57578.592056  Ingresos propios   \n",
              "3   6081.449551  4.475003e+10      6397.621340  Ingresos propios   \n",
              "4   1558.904682  1.147112e+10      1639.951425  Ingresos propios   \n",
              "\n",
              "         clas_gen_2  \n",
              "0  Ingresos propios  \n",
              "1  Ingresos propios  \n",
              "2  Ingresos propios  \n",
              "3  Ingresos propios  \n",
              "4  Ingresos propios  \n",
              "\n",
              "[5 rows x 25 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c11c5004-2f6c-495c-83dd-b46726a15053\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Código DANE</th>\n",
              "      <th>Entidad</th>\n",
              "      <th>Tipo de Entidad</th>\n",
              "      <th>Total Recaudo</th>\n",
              "      <th>col_1</th>\n",
              "      <th>col_2</th>\n",
              "      <th>col_3</th>\n",
              "      <th>col_4</th>\n",
              "      <th>col_5</th>\n",
              "      <th>col_6</th>\n",
              "      <th>...</th>\n",
              "      <th>codigo_alt</th>\n",
              "      <th>Departamento</th>\n",
              "      <th>Año</th>\n",
              "      <th>clasificacion_ofpuj</th>\n",
              "      <th>CodigodDane</th>\n",
              "      <th>recaudo_pc</th>\n",
              "      <th>recaudo_cons</th>\n",
              "      <th>recaudo_pc_cons</th>\n",
              "      <th>clas_gen</th>\n",
              "      <th>clas_gen_2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>5000</td>\n",
              "      <td>Antioquia</td>\n",
              "      <td>Departamento</td>\n",
              "      <td>4296815623</td>\n",
              "      <td>INGRESOS</td>\n",
              "      <td>INGRESOS CORRIENTES</td>\n",
              "      <td>INGRESOS TRIBUTARIOS</td>\n",
              "      <td>IMPUESTOS DIRECTOS</td>\n",
              "      <td>IMPUESTO SOBRE VEHICULOS AUTOMOTORES</td>\n",
              "      <td>IMPUESTO SOBRE VEHICULOS AUTOMOTORES</td>\n",
              "      <td>...</td>\n",
              "      <td>5000.0</td>\n",
              "      <td>Antioquia</td>\n",
              "      <td>2023</td>\n",
              "      <td>Impuesto sobre vehiculos automotores</td>\n",
              "      <td>5000.0</td>\n",
              "      <td>614.287833</td>\n",
              "      <td>4.520205e+09</td>\n",
              "      <td>646.224378</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Ingresos propios</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>5000</td>\n",
              "      <td>Antioquia</td>\n",
              "      <td>Departamento</td>\n",
              "      <td>107856005961</td>\n",
              "      <td>INGRESOS</td>\n",
              "      <td>INGRESOS CORRIENTES</td>\n",
              "      <td>INGRESOS TRIBUTARIOS</td>\n",
              "      <td>IMPUESTOS DIRECTOS</td>\n",
              "      <td>IMPUESTO SOBRE VEHICULOS AUTOMOTORES</td>\n",
              "      <td>IMPUESTO SOBRE VEHICULOS AUTOMOTORES</td>\n",
              "      <td>...</td>\n",
              "      <td>5000.0</td>\n",
              "      <td>Antioquia</td>\n",
              "      <td>2023</td>\n",
              "      <td>Impuesto sobre vehiculos automotores</td>\n",
              "      <td>5000.0</td>\n",
              "      <td>15419.472939</td>\n",
              "      <td>1.134634e+11</td>\n",
              "      <td>16221.124306</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Ingresos propios</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5000</td>\n",
              "      <td>Antioquia</td>\n",
              "      <td>Departamento</td>\n",
              "      <td>382846271980</td>\n",
              "      <td>INGRESOS</td>\n",
              "      <td>INGRESOS CORRIENTES</td>\n",
              "      <td>INGRESOS TRIBUTARIOS</td>\n",
              "      <td>IMPUESTOS DIRECTOS</td>\n",
              "      <td>IMPUESTO SOBRE VEHICULOS AUTOMOTORES</td>\n",
              "      <td>IMPUESTO SOBRE VEHICULOS AUTOMOTORES</td>\n",
              "      <td>...</td>\n",
              "      <td>5000.0</td>\n",
              "      <td>Antioquia</td>\n",
              "      <td>2023</td>\n",
              "      <td>Impuesto sobre vehiculos automotores</td>\n",
              "      <td>5000.0</td>\n",
              "      <td>54733.045955</td>\n",
              "      <td>4.027503e+11</td>\n",
              "      <td>57578.592056</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Ingresos propios</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5000</td>\n",
              "      <td>Antioquia</td>\n",
              "      <td>Departamento</td>\n",
              "      <td>42538474665</td>\n",
              "      <td>INGRESOS</td>\n",
              "      <td>INGRESOS CORRIENTES</td>\n",
              "      <td>INGRESOS TRIBUTARIOS</td>\n",
              "      <td>IMPUESTOS DIRECTOS</td>\n",
              "      <td>IMPUESTO SOBRE VEHICULOS AUTOMOTORES</td>\n",
              "      <td>IMPUESTO SOBRE VEHICULOS AUTOMOTORES</td>\n",
              "      <td>...</td>\n",
              "      <td>5000.0</td>\n",
              "      <td>Antioquia</td>\n",
              "      <td>2023</td>\n",
              "      <td>Impuesto sobre vehiculos automotores</td>\n",
              "      <td>5000.0</td>\n",
              "      <td>6081.449551</td>\n",
              "      <td>4.475003e+10</td>\n",
              "      <td>6397.621340</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Ingresos propios</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5000</td>\n",
              "      <td>Antioquia</td>\n",
              "      <td>Departamento</td>\n",
              "      <td>10904213995</td>\n",
              "      <td>INGRESOS</td>\n",
              "      <td>INGRESOS CORRIENTES</td>\n",
              "      <td>INGRESOS TRIBUTARIOS</td>\n",
              "      <td>IMPUESTOS DIRECTOS</td>\n",
              "      <td>IMPUESTO A GANADORES DE SORTEOS ORDINARIOS Y E...</td>\n",
              "      <td>IMPUESTO A GANADORES DE SORTEOS ORDINARIOS Y E...</td>\n",
              "      <td>...</td>\n",
              "      <td>5000.0</td>\n",
              "      <td>Antioquia</td>\n",
              "      <td>2023</td>\n",
              "      <td>Otros ingresos tributarios</td>\n",
              "      <td>5000.0</td>\n",
              "      <td>1558.904682</td>\n",
              "      <td>1.147112e+10</td>\n",
              "      <td>1639.951425</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Ingresos propios</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 25 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c11c5004-2f6c-495c-83dd-b46726a15053')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c11c5004-2f6c-495c-83dd-b46726a15053 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c11c5004-2f6c-495c-83dd-b46726a15053');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-6c757d83-83e9-475a-ba74-db495f007cb0\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6c757d83-83e9-475a-ba74-db495f007cb0')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-6c757d83-83e9-475a-ba74-db495f007cb0 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "pres"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pres.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 551
        },
        "id": "p0yLW0HFPgA-",
        "outputId": "b54973eb-c60b-443c-fc94-d5d1f235854d"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Código DANE                Entidad Tipo de Entidad  Total Recaudo  \\\n",
              "206686        27493  Nuevo Belén de Bajirá       Municipio     4197691689   \n",
              "206687        27493  Nuevo Belén de Bajirá       Municipio       25573334   \n",
              "206688        27493  Nuevo Belén de Bajirá       Municipio       15499616   \n",
              "206689        27493  Nuevo Belén de Bajirá       Municipio       25000000   \n",
              "206690        27493  Nuevo Belén de Bajirá       Municipio      485911548   \n",
              "\n",
              "           col_1                col_2                                col_3  \\\n",
              "206686  INGRESOS  INGRESOS CORRIENTES              INGRESOS NO TRIBUTARIOS   \n",
              "206687  INGRESOS  INGRESOS CORRIENTES              INGRESOS NO TRIBUTARIOS   \n",
              "206688  INGRESOS  RECURSOS DE CAPITAL             RENDIMIENTOS FINANCIEROS   \n",
              "206689  INGRESOS  RECURSOS DE CAPITAL  RECUPERACION DE CARTERA - PRESTAMOS   \n",
              "206690  INGRESOS  RECURSOS DE CAPITAL                       RETIROS FONPET   \n",
              "\n",
              "                                                    col_4  \\\n",
              "206686                          TRANSFERENCIAS CORRIENTES   \n",
              "206687             PARTICIPACION Y DERECHOS POR MONOPOLIO   \n",
              "206688                                          DEPOSITOS   \n",
              "206689                     DE OTRAS ENTIDADES DE GOBIERNO   \n",
              "206690  PARA EL PAGO DE BONOS PENSIONALES O CUOTAS PAR...   \n",
              "\n",
              "                                                    col_5  \\\n",
              "206686                 SISTEMA GENERAL DE PARTICIPACIONES   \n",
              "206687  DERECHOS POR LA EXPLOTACION JUEGOS DE SUERTE Y...   \n",
              "206688                                          DEPOSITOS   \n",
              "206689                     DE OTRAS ENTIDADES DE GOBIERNO   \n",
              "206690  PARA EL PAGO DE BONOS Y CUOTAS PARTES DE BONOS...   \n",
              "\n",
              "                                                    col_6  ... codigo_alt  \\\n",
              "206686                  AGUA POTABLE Y SANEAMIENTO BASICO  ...        NaN   \n",
              "206687  DERECHOS POR LA EXPLOTACION JUEGOS DE SUERTE Y...  ...        NaN   \n",
              "206688                                          DEPOSITOS  ...        NaN   \n",
              "206689                     DE OTRAS ENTIDADES DE GOBIERNO  ...        NaN   \n",
              "206690  PARA EL PAGO DE BONOS Y CUOTAS PARTES DE BONOS...  ...        NaN   \n",
              "\n",
              "       Departamento   Año                 clasificacion_ofpuj  CodigodDane  \\\n",
              "206686        Chocó  2024  Sistema general de participaciones          NaN   \n",
              "206687        Chocó  2024      Tasas, multas y contribuciones          NaN   \n",
              "206688        Chocó  2024           Otros recursos de capital          NaN   \n",
              "206689        Chocó  2024           Otros recursos de capital          NaN   \n",
              "206690        Chocó  2024           Otros recursos de capital          NaN   \n",
              "\n",
              "           recaudo_pc  recaudo_cons  recaudo_pc_cons             clas_gen  \\\n",
              "206686  132327.460091  4.197692e+09    132327.460091       Transferencias   \n",
              "206687     806.170292  2.557333e+07       806.170292     Ingresos propios   \n",
              "206688     488.607780  1.549962e+07       488.607780  Recursos de capital   \n",
              "206689     788.096589  2.500000e+07       788.096589  Recursos de capital   \n",
              "206690   15317.809344  4.859115e+08     15317.809344  Recursos de capital   \n",
              "\n",
              "                 clas_gen_2  \n",
              "206686       Transferencias  \n",
              "206687     Ingresos propios  \n",
              "206688  Recursos de capital  \n",
              "206689  Recursos de capital  \n",
              "206690  Recursos de capital  \n",
              "\n",
              "[5 rows x 25 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f3978350-60de-4417-9da1-ef776a70626a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Código DANE</th>\n",
              "      <th>Entidad</th>\n",
              "      <th>Tipo de Entidad</th>\n",
              "      <th>Total Recaudo</th>\n",
              "      <th>col_1</th>\n",
              "      <th>col_2</th>\n",
              "      <th>col_3</th>\n",
              "      <th>col_4</th>\n",
              "      <th>col_5</th>\n",
              "      <th>col_6</th>\n",
              "      <th>...</th>\n",
              "      <th>codigo_alt</th>\n",
              "      <th>Departamento</th>\n",
              "      <th>Año</th>\n",
              "      <th>clasificacion_ofpuj</th>\n",
              "      <th>CodigodDane</th>\n",
              "      <th>recaudo_pc</th>\n",
              "      <th>recaudo_cons</th>\n",
              "      <th>recaudo_pc_cons</th>\n",
              "      <th>clas_gen</th>\n",
              "      <th>clas_gen_2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>206686</th>\n",
              "      <td>27493</td>\n",
              "      <td>Nuevo Belén de Bajirá</td>\n",
              "      <td>Municipio</td>\n",
              "      <td>4197691689</td>\n",
              "      <td>INGRESOS</td>\n",
              "      <td>INGRESOS CORRIENTES</td>\n",
              "      <td>INGRESOS NO TRIBUTARIOS</td>\n",
              "      <td>TRANSFERENCIAS CORRIENTES</td>\n",
              "      <td>SISTEMA GENERAL DE PARTICIPACIONES</td>\n",
              "      <td>AGUA POTABLE Y SANEAMIENTO BASICO</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chocó</td>\n",
              "      <td>2024</td>\n",
              "      <td>Sistema general de participaciones</td>\n",
              "      <td>NaN</td>\n",
              "      <td>132327.460091</td>\n",
              "      <td>4.197692e+09</td>\n",
              "      <td>132327.460091</td>\n",
              "      <td>Transferencias</td>\n",
              "      <td>Transferencias</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206687</th>\n",
              "      <td>27493</td>\n",
              "      <td>Nuevo Belén de Bajirá</td>\n",
              "      <td>Municipio</td>\n",
              "      <td>25573334</td>\n",
              "      <td>INGRESOS</td>\n",
              "      <td>INGRESOS CORRIENTES</td>\n",
              "      <td>INGRESOS NO TRIBUTARIOS</td>\n",
              "      <td>PARTICIPACION Y DERECHOS POR MONOPOLIO</td>\n",
              "      <td>DERECHOS POR LA EXPLOTACION JUEGOS DE SUERTE Y...</td>\n",
              "      <td>DERECHOS POR LA EXPLOTACION JUEGOS DE SUERTE Y...</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chocó</td>\n",
              "      <td>2024</td>\n",
              "      <td>Tasas, multas y contribuciones</td>\n",
              "      <td>NaN</td>\n",
              "      <td>806.170292</td>\n",
              "      <td>2.557333e+07</td>\n",
              "      <td>806.170292</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Ingresos propios</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206688</th>\n",
              "      <td>27493</td>\n",
              "      <td>Nuevo Belén de Bajirá</td>\n",
              "      <td>Municipio</td>\n",
              "      <td>15499616</td>\n",
              "      <td>INGRESOS</td>\n",
              "      <td>RECURSOS DE CAPITAL</td>\n",
              "      <td>RENDIMIENTOS FINANCIEROS</td>\n",
              "      <td>DEPOSITOS</td>\n",
              "      <td>DEPOSITOS</td>\n",
              "      <td>DEPOSITOS</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chocó</td>\n",
              "      <td>2024</td>\n",
              "      <td>Otros recursos de capital</td>\n",
              "      <td>NaN</td>\n",
              "      <td>488.607780</td>\n",
              "      <td>1.549962e+07</td>\n",
              "      <td>488.607780</td>\n",
              "      <td>Recursos de capital</td>\n",
              "      <td>Recursos de capital</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206689</th>\n",
              "      <td>27493</td>\n",
              "      <td>Nuevo Belén de Bajirá</td>\n",
              "      <td>Municipio</td>\n",
              "      <td>25000000</td>\n",
              "      <td>INGRESOS</td>\n",
              "      <td>RECURSOS DE CAPITAL</td>\n",
              "      <td>RECUPERACION DE CARTERA - PRESTAMOS</td>\n",
              "      <td>DE OTRAS ENTIDADES DE GOBIERNO</td>\n",
              "      <td>DE OTRAS ENTIDADES DE GOBIERNO</td>\n",
              "      <td>DE OTRAS ENTIDADES DE GOBIERNO</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chocó</td>\n",
              "      <td>2024</td>\n",
              "      <td>Otros recursos de capital</td>\n",
              "      <td>NaN</td>\n",
              "      <td>788.096589</td>\n",
              "      <td>2.500000e+07</td>\n",
              "      <td>788.096589</td>\n",
              "      <td>Recursos de capital</td>\n",
              "      <td>Recursos de capital</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206690</th>\n",
              "      <td>27493</td>\n",
              "      <td>Nuevo Belén de Bajirá</td>\n",
              "      <td>Municipio</td>\n",
              "      <td>485911548</td>\n",
              "      <td>INGRESOS</td>\n",
              "      <td>RECURSOS DE CAPITAL</td>\n",
              "      <td>RETIROS FONPET</td>\n",
              "      <td>PARA EL PAGO DE BONOS PENSIONALES O CUOTAS PAR...</td>\n",
              "      <td>PARA EL PAGO DE BONOS Y CUOTAS PARTES DE BONOS...</td>\n",
              "      <td>PARA EL PAGO DE BONOS Y CUOTAS PARTES DE BONOS...</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chocó</td>\n",
              "      <td>2024</td>\n",
              "      <td>Otros recursos de capital</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15317.809344</td>\n",
              "      <td>4.859115e+08</td>\n",
              "      <td>15317.809344</td>\n",
              "      <td>Recursos de capital</td>\n",
              "      <td>Recursos de capital</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 25 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3978350-60de-4417-9da1-ef776a70626a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f3978350-60de-4417-9da1-ef776a70626a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f3978350-60de-4417-9da1-ef776a70626a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-8bcc4a6c-1a86-4258-baaf-206777e4bbfd\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8bcc4a6c-1a86-4258-baaf-206777e4bbfd')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-8bcc4a6c-1a86-4258-baaf-206777e4bbfd button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#seleccionar columnas\n",
        "#una sola columna\n",
        "pres[\"Departamento\"]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 458
        },
        "id": "76oDD2gaQgLy",
        "outputId": "eb738e32-8990-40a2-fd5d-906bb10cfb86"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0         Antioquia\n",
              "1         Antioquia\n",
              "2         Antioquia\n",
              "3         Antioquia\n",
              "4         Antioquia\n",
              "            ...    \n",
              "206686        Chocó\n",
              "206687        Chocó\n",
              "206688        Chocó\n",
              "206689        Chocó\n",
              "206690        Chocó\n",
              "Name: Departamento, Length: 206691, dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Departamento</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Antioquia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Antioquia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Antioquia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Antioquia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Antioquia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206686</th>\n",
              "      <td>Chocó</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206687</th>\n",
              "      <td>Chocó</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206688</th>\n",
              "      <td>Chocó</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206689</th>\n",
              "      <td>Chocó</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206690</th>\n",
              "      <td>Chocó</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>206691 rows × 1 columns</p>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pres.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7gyOYIROQ7B6",
        "outputId": "b9220ba0-decb-4db4-db8a-3e04429a5150"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Código DANE', 'Entidad', 'Tipo de Entidad', 'Total Recaudo', 'col_1',\n",
              "       'col_2', 'col_3', 'col_4', 'col_5', 'col_6', 'col_7', 'col_8', 'col_9',\n",
              "       'col_10', 'Categoría', 'codigo_alt', 'Departamento', 'Año',\n",
              "       'clasificacion_ofpuj', 'CodigodDane', 'recaudo_pc', 'recaudo_cons',\n",
              "       'recaudo_pc_cons', 'clas_gen', 'clas_gen_2'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#varias columnas\n",
        "\n",
        "pres[[\"Departamento\",\"clas_gen\",\"Entidad\"]]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "az3s5wzDRCEp",
        "outputId": "73054996-4188-4f01-cd11-803ca5355d50"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Departamento             clas_gen                Entidad\n",
              "0         Antioquia     Ingresos propios              Antioquia\n",
              "1         Antioquia     Ingresos propios              Antioquia\n",
              "2         Antioquia     Ingresos propios              Antioquia\n",
              "3         Antioquia     Ingresos propios              Antioquia\n",
              "4         Antioquia     Ingresos propios              Antioquia\n",
              "...             ...                  ...                    ...\n",
              "206686        Chocó       Transferencias  Nuevo Belén de Bajirá\n",
              "206687        Chocó     Ingresos propios  Nuevo Belén de Bajirá\n",
              "206688        Chocó  Recursos de capital  Nuevo Belén de Bajirá\n",
              "206689        Chocó  Recursos de capital  Nuevo Belén de Bajirá\n",
              "206690        Chocó  Recursos de capital  Nuevo Belén de Bajirá\n",
              "\n",
              "[206691 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ff434de9-1a02-4c03-a16d-9f22d3d95e40\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Departamento</th>\n",
              "      <th>clas_gen</th>\n",
              "      <th>Entidad</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Antioquia</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Antioquia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Antioquia</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Antioquia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Antioquia</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Antioquia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Antioquia</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Antioquia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Antioquia</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Antioquia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206686</th>\n",
              "      <td>Chocó</td>\n",
              "      <td>Transferencias</td>\n",
              "      <td>Nuevo Belén de Bajirá</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206687</th>\n",
              "      <td>Chocó</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Nuevo Belén de Bajirá</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206688</th>\n",
              "      <td>Chocó</td>\n",
              "      <td>Recursos de capital</td>\n",
              "      <td>Nuevo Belén de Bajirá</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206689</th>\n",
              "      <td>Chocó</td>\n",
              "      <td>Recursos de capital</td>\n",
              "      <td>Nuevo Belén de Bajirá</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206690</th>\n",
              "      <td>Chocó</td>\n",
              "      <td>Recursos de capital</td>\n",
              "      <td>Nuevo Belén de Bajirá</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>206691 rows × 3 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff434de9-1a02-4c03-a16d-9f22d3d95e40')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ff434de9-1a02-4c03-a16d-9f22d3d95e40 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ff434de9-1a02-4c03-a16d-9f22d3d95e40');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-e4e1ba02-befd-4707-b411-106756a44913\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e4e1ba02-befd-4707-b411-106756a44913')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-e4e1ba02-befd-4707-b411-106756a44913 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pres.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PpvlhCgVSNqC",
        "outputId": "a593c812-afb3-4a7e-c300-bd8c41badbd0"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Código DANE', 'Entidad', 'Tipo de Entidad', 'Total Recaudo', 'col_1',\n",
              "       'col_2', 'col_3', 'col_4', 'col_5', 'col_6', 'col_7', 'col_8', 'col_9',\n",
              "       'col_10', 'Categoría', 'codigo_alt', 'Departamento', 'Año',\n",
              "       'clasificacion_ofpuj', 'CodigodDane', 'recaudo_pc', 'recaudo_cons',\n",
              "       'recaudo_pc_cons', 'clas_gen', 'clas_gen_2'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pres[[\"codigo_alt\",\"Departamento\",\"Año\",\"clas_gen_2\",\"Tipo de Entidad\",\"clasificacion_ofpuj\",\"Entidad\",\"Total Recaudo\"]]"
      ],
      "metadata": {
        "id": "_Xyfa-J8RQpS"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# cambiar nombres columnas snakecase\n",
        "df = df.rename(columns={\"Entidad\": \"entidad\",\n",
        "                   \"Departamento\": \"depto\",\n",
        "                   \"Tipo de Entidad\": \"tipo_entidad\",\n",
        "                   \"Año\": \"anio\",\n",
        "                   \"clas_gen_2\": \"clas_gen\",\n",
        "                   \"Total Recaudo\": \"total_recaudo\"})\n",
        "# codigo alt resolver datos nulos\n",
        "df.isna().sum()\n",
        "# verificar los tipos de datos"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 335
        },
        "id": "vQUIrpGrR-01",
        "outputId": "8de2d5bb-ac73-4134-d5e6-9928c674b916"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "codigo_alt             212\n",
              "depto                    0\n",
              "anio                     0\n",
              "clas_gen                 0\n",
              "tipo_entidad             0\n",
              "clasificacion_ofpuj      0\n",
              "entidad                  0\n",
              "total_recaudo            0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>codigo_alt</th>\n",
              "      <td>212</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>depto</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>anio</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>clas_gen</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>tipo_entidad</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>clasificacion_ofpuj</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>entidad</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>total_recaudo</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[df[\"codigo_alt\"].isna()][\"entidad\"].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jKvEgTfrUoKh",
        "outputId": "88f5dad8-cee8-4a70-b193-8e1dc926ebff"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['San Andrés', 'Nuevo Belén de Bajirá'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.loc[df[\"entidad\"] == \"Nuevo Belén de Bajirá\", \"codigo_alt\"] = 27493\n",
        "df.loc[df[\"entidad\"] == \"San Andrés\", \"codigo_alt\"] = 88001"
      ],
      "metadata": {
        "id": "xfKC0IHZVYSC"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.isna().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 335
        },
        "id": "sXktCOUqXhJX",
        "outputId": "c8cbe656-6cc4-441b-bb7f-7c70985853ea"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "codigo_alt             0\n",
              "depto                  0\n",
              "anio                   0\n",
              "clas_gen               0\n",
              "tipo_entidad           0\n",
              "clasificacion_ofpuj    0\n",
              "entidad                0\n",
              "total_recaudo          0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>codigo_alt</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>depto</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>anio</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>clas_gen</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>tipo_entidad</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>clasificacion_ofpuj</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>entidad</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>total_recaudo</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QNlMjUPtYDP-",
        "outputId": "c8ffbfbe-8ed6-40ba-9953-943ba58c8931"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 206691 entries, 0 to 206690\n",
            "Data columns (total 8 columns):\n",
            " #   Column               Non-Null Count   Dtype  \n",
            "---  ------               --------------   -----  \n",
            " 0   codigo_alt           206691 non-null  float64\n",
            " 1   depto                206691 non-null  object \n",
            " 2   anio                 206691 non-null  int64  \n",
            " 3   clas_gen             206691 non-null  object \n",
            " 4   tipo_entidad         206691 non-null  object \n",
            " 5   clasificacion_ofpuj  206691 non-null  object \n",
            " 6   entidad              206691 non-null  object \n",
            " 7   total_recaudo        206691 non-null  int64  \n",
            "dtypes: float64(1), int64(2), object(5)\n",
            "memory usage: 12.6+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.astype({\"codigo_alt\": \"int\"})"
      ],
      "metadata": {
        "id": "cV5DPhXlY1r3"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lista = [\"Chipaque\",\"Villavicencio\",\"Montería\"]"
      ],
      "metadata": {
        "id": "tLXCIZBFZdRP"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "filtro = df[(df[\"entidad\"].isin(lista)) & (df[\"anio\"] == 2024)].reset_index(drop=True)"
      ],
      "metadata": {
        "id": "sU-hcATqZgK3"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "filtro"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "CVCv_ArBbBrp",
        "outputId": "90d0dc5e-3218-4ed1-f289-3cddea250ef9"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     codigo_alt         depto  anio             clas_gen tipo_entidad  \\\n",
              "0         23001       Córdoba  2024     Ingresos propios    Municipio   \n",
              "1         23001       Córdoba  2024     Ingresos propios    Municipio   \n",
              "2         23001       Córdoba  2024     Ingresos propios    Municipio   \n",
              "3         23001       Córdoba  2024     Ingresos propios    Municipio   \n",
              "4         23001       Córdoba  2024     Ingresos propios    Municipio   \n",
              "..          ...           ...   ...                  ...          ...   \n",
              "408       25178  Cundinamarca  2024  Recursos de capital    Municipio   \n",
              "409       25178  Cundinamarca  2024  Recursos de capital    Municipio   \n",
              "410       25178  Cundinamarca  2024  Recursos de capital    Municipio   \n",
              "411       25178  Cundinamarca  2024  Recursos de capital    Municipio   \n",
              "412       25178  Cundinamarca  2024  Recursos de capital    Municipio   \n",
              "\n",
              "            clasificacion_ofpuj   entidad  total_recaudo  \n",
              "0           Sobretasa ambiental  Montería     9095214372  \n",
              "1           Sobretasa ambiental  Montería     1321531657  \n",
              "2    Impuesto predial unificado  Montería    60303050596  \n",
              "3    Impuesto predial unificado  Montería     8935640732  \n",
              "4       Sobretasa a la gasolina  Montería    24217583000  \n",
              "..                          ...       ...            ...  \n",
              "408   Otros recursos de capital  Chipaque           1302  \n",
              "409   Otros recursos de capital  Chipaque         135695  \n",
              "410   Otros recursos de capital  Chipaque      407968622  \n",
              "411        Recursos del balance  Chipaque     2239618079  \n",
              "412   Otros recursos de capital  Chipaque       69403000  \n",
              "\n",
              "[413 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e8f8611f-d4f3-49c0-9ab8-e3efe1fe600f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>codigo_alt</th>\n",
              "      <th>depto</th>\n",
              "      <th>anio</th>\n",
              "      <th>clas_gen</th>\n",
              "      <th>tipo_entidad</th>\n",
              "      <th>clasificacion_ofpuj</th>\n",
              "      <th>entidad</th>\n",
              "      <th>total_recaudo</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>23001</td>\n",
              "      <td>Córdoba</td>\n",
              "      <td>2024</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Municipio</td>\n",
              "      <td>Sobretasa ambiental</td>\n",
              "      <td>Montería</td>\n",
              "      <td>9095214372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>23001</td>\n",
              "      <td>Córdoba</td>\n",
              "      <td>2024</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Municipio</td>\n",
              "      <td>Sobretasa ambiental</td>\n",
              "      <td>Montería</td>\n",
              "      <td>1321531657</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>23001</td>\n",
              "      <td>Córdoba</td>\n",
              "      <td>2024</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Municipio</td>\n",
              "      <td>Impuesto predial unificado</td>\n",
              "      <td>Montería</td>\n",
              "      <td>60303050596</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>23001</td>\n",
              "      <td>Córdoba</td>\n",
              "      <td>2024</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Municipio</td>\n",
              "      <td>Impuesto predial unificado</td>\n",
              "      <td>Montería</td>\n",
              "      <td>8935640732</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>23001</td>\n",
              "      <td>Córdoba</td>\n",
              "      <td>2024</td>\n",
              "      <td>Ingresos propios</td>\n",
              "      <td>Municipio</td>\n",
              "      <td>Sobretasa a la gasolina</td>\n",
              "      <td>Montería</td>\n",
              "      <td>24217583000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>408</th>\n",
              "      <td>25178</td>\n",
              "      <td>Cundinamarca</td>\n",
              "      <td>2024</td>\n",
              "      <td>Recursos de capital</td>\n",
              "      <td>Municipio</td>\n",
              "      <td>Otros recursos de capital</td>\n",
              "      <td>Chipaque</td>\n",
              "      <td>1302</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>409</th>\n",
              "      <td>25178</td>\n",
              "      <td>Cundinamarca</td>\n",
              "      <td>2024</td>\n",
              "      <td>Recursos de capital</td>\n",
              "      <td>Municipio</td>\n",
              "      <td>Otros recursos de capital</td>\n",
              "      <td>Chipaque</td>\n",
              "      <td>135695</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>25178</td>\n",
              "      <td>Cundinamarca</td>\n",
              "      <td>2024</td>\n",
              "      <td>Recursos de capital</td>\n",
              "      <td>Municipio</td>\n",
              "      <td>Otros recursos de capital</td>\n",
              "      <td>Chipaque</td>\n",
              "      <td>407968622</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>411</th>\n",
              "      <td>25178</td>\n",
              "      <td>Cundinamarca</td>\n",
              "      <td>2024</td>\n",
              "      <td>Recursos de capital</td>\n",
              "      <td>Municipio</td>\n",
              "      <td>Recursos del balance</td>\n",
              "      <td>Chipaque</td>\n",
              "      <td>2239618079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>412</th>\n",
              "      <td>25178</td>\n",
              "      <td>Cundinamarca</td>\n",
              "      <td>2024</td>\n",
              "      <td>Recursos de capital</td>\n",
              "      <td>Municipio</td>\n",
              "      <td>Otros recursos de capital</td>\n",
              "      <td>Chipaque</td>\n",
              "      <td>69403000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>413 rows × 8 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e8f8611f-d4f3-49c0-9ab8-e3efe1fe600f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e8f8611f-d4f3-49c0-9ab8-e3efe1fe600f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e8f8611f-d4f3-49c0-9ab8-e3efe1fe600f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-178ee7b6-14ad-4de4-be13-c54356f28375\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-178ee7b6-14ad-4de4-be13-c54356f28375')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-178ee7b6-14ad-4de4-be13-c54356f28375 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_ad5ffa9a-c9f6-42e2-b66a-d6a95ae1f6a1\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('filtro')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_ad5ffa9a-c9f6-42e2-b66a-d6a95ae1f6a1 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('filtro');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "filtro",
              "summary": "{\n  \"name\": \"filtro\",\n  \"rows\": 413,\n  \"fields\": [\n    {\n      \"column\": \"codigo_alt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12707,\n        \"min\": 23001,\n        \"max\": 50001,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          23001,\n          50001,\n          25178\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"depto\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"C\\u00f3rdoba\",\n          \"Meta\",\n          \"Cundinamarca\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2024,\n        \"max\": 2024,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2024\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clas_gen\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Ingresos propios\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tipo_entidad\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Municipio\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clasificacion_ofpuj\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Sobretasa ambiental\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"entidad\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Monter\\u00eda\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_recaudo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35721724913,\n        \"min\": 242,\n        \"max\": 420607252493,\n        \"num_unique_values\": 407,\n        \"samples\": [\n          779582987\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "filtro.groupby([\"entidad\"])[\"total_recaudo\"].sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 210
        },
        "id": "yY4IOs-ObNyo",
        "outputId": "39fd8851-8d4e-4e2c-e186-54cb2ab6f785"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "entidad\n",
              "Chipaque           23119870523\n",
              "Montería         1577484844356\n",
              "Villavicencio    1324205123043\n",
              "Name: total_recaudo, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>total_recaudo</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>entidad</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Chipaque</th>\n",
              "      <td>23119870523</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Montería</th>\n",
              "      <td>1577484844356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Villavicencio</th>\n",
              "      <td>1324205123043</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "filtro.to_csv(\"munis.csv\", index=False)"
      ],
      "metadata": {
        "id": "0HZT3SZFbl1g"
      },
      "execution_count": 43,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "gy0HI4P5cnxh"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}